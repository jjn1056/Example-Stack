# NAME

Example::Stack - Trying to write a min function that is fast on a Stack object

# SYNOPSIS

    use Example::Stack;

    my $stack = Example::Stack->new;

    $stack->push($_) for (1,1,10);

    say $stack->pop; # 10
    $stack->push(100);
    say $stack->min; # 1;

# DESCRIPTION

Create a classic stack object which defines an additional method called `min`
that is a fast lookup of the minimum value in the stack.

# METHODS

This class exposes the following public methods.

## push

Pushes an Integer onto the stack.

## pop

Pops a value of the stack

## min\_naive

Each time this method is called we do an ascending sort of ALL the items in
the stack and return the first, which is the smallest value.

## min\_fast

Returns the smallest item in the stack by using a system where we track the
smallest number history in a trace log.

# SEE ALSO

The following modules or resources may be of interest.

[Moose](http://search.cpan.org/perldoc?Moose)

# AUTHOR

    John Napiorkowski C<< <jjnapiork@cpan.org> >>

# COPYRIGHT & LICENSE

Copyright 2012, John Napiorkowski `<jjnapiork@cpan.org>`

This program is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
